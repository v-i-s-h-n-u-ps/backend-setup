# Generated by Django 3.0.5 on 2020-04-25 12:47

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Certificate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('details', models.CharField(blank=True, max_length=400)),
                ('certificate_id', models.CharField(max_length=50)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Course',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('icon', models.CharField(max_length=200)),
                ('description', models.CharField(blank=True, max_length=200)),
                ('price', models.DecimalField(decimal_places=2, max_digits=7)),
                ('start_date', models.DateTimeField()),
                ('end_date', models.DateTimeField()),
                ('payment_link', models.CharField(blank=True, max_length=200)),
                ('duration', models.IntegerField(default=0, help_text='# of hours for the course')),
                ('session_count', models.IntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='CourseEnrollment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.IntegerField(help_text='completed, on going, incompleted')),
                ('points_earned', models.IntegerField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='MultipleAnswerQuestion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question', models.CharField(max_length=500)),
                ('choices', models.CharField(help_text='[option 1, option 2, option 3, option 4]', max_length=250)),
                ('answers', models.CharField(help_text='[0,3]: indices of the options array with correct options', max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='Notes',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('firebase_url', models.CharField(max_length=200)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.DecimalField(decimal_places=2, max_digits=7)),
                ('transaction_id', models.CharField(max_length=50)),
                ('gateway_id', models.CharField(help_text='payment gateway id', max_length=100)),
                ('status', models.CharField(help_text='success, failed', max_length=10)),
                ('purchased_on', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Session',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.CharField(blank=True, max_length=200)),
                ('date_time', models.DateTimeField()),
                ('payment_link', models.CharField(blank=True, max_length=200)),
                ('duration', models.IntegerField(default=0)),
                ('weight', models.DecimalField(decimal_places=2, max_digits=5)),
                ('session_url', models.CharField(blank=True, max_length=200)),
                ('recording_url', models.CharField(blank=True, max_length=200)),
                ('lecture_slides', models.CharField(blank=True, max_length=200)),
                ('lecture_notes', models.CharField(blank=True, max_length=200)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='SessionAssignment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('point', models.IntegerField(default=1)),
            ],
        ),
        migrations.CreateModel(
            name='SessionAssignmentResult',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('point', models.IntegerField(default=1)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='SingleAnswerQuestion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question', models.CharField(max_length=500)),
                ('choices', models.CharField(help_text='[option 1, option 2, option 3, option 4]', max_length=250)),
                ('answer', models.CharField(help_text='1: index of the options array with correct options', max_length=2)),
            ],
        ),
        migrations.CreateModel(
            name='SessionAttendance',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('login_time', models.DateTimeField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='learner.Session')),
            ],
        ),
    ]
